2025-02-21 18:22:02,504 [INFO] Starting new research session. Log file: /home/scott/Documents/code/brainuniverse/src/src/features/deep-research/services/python/output_logs/deep_research_20250221_182202.log
2025-02-21 18:22:04,748 [INFO] 
================================================================================
Generating Report Plan
================================================================================
2025-02-21 18:22:04,748 [INFO] Input state: {'topic': 'Foundational AI models of biology', 'number_of_main_sections': 5, 'completed_sections': []}
2025-02-21 18:22:04,748 [INFO] Config: {'metadata': {'thread_id': 'af68348d-d5f6-417f-8a67-6a2ef135ae51', 'search_api': 'tavily', 'planner_provider': 'openai', 'max_search_depth': 1, 'planner_model': 'o3-mini', 'number_of_queries': 2, 'writer_model': 'claude-3-sonnet-20240229', 'langgraph_step': 1, 'langgraph_node': 'generate_report_plan', 'langgraph_triggers': ['start:generate_report_plan'], 'langgraph_path': ('__pregel_pull', 'generate_report_plan'), 'langgraph_checkpoint_ns': 'generate_report_plan:95b586ca-bbef-4a3b-ceb2-a8e5b89fee3a'}, 'configurable': {'thread_id': 'af68348d-d5f6-417f-8a67-6a2ef135ae51', 'search_api': 'tavily', 'planner_provider': 'openai', 'max_search_depth': 1, 'planner_model': 'o3-mini', 'number_of_queries': 2, 'writer_model': 'claude-3-sonnet-20240229', '__pregel_resuming': False, '__pregel_task_id': '95b586ca-bbef-4a3b-ceb2-a8e5b89fee3a', '__pregel_send': functools.partial(<function PregelRunner.atick.<locals>.writer at 0x76fbe6e07880>, PregelExecutableTask(name='generate_report_plan', input={'topic': 'Foundational AI models of biology', 'number_of_main_sections': 5, 'completed_sections': []}, proc=<langgraph.utils.runnable.RunnableSeq object at 0x76fbe6ea1290>, writes=deque([]), config={'metadata': {'thread_id': 'af68348d-d5f6-417f-8a67-6a2ef135ae51', 'search_api': 'tavily', 'planner_provider': 'openai', 'max_search_depth': 1, 'planner_model': 'o3-mini', 'number_of_queries': 2, 'writer_model': 'claude-3-sonnet-20240229', 'langgraph_step': 1, 'langgraph_node': 'generate_report_plan', 'langgraph_triggers': ['start:generate_report_plan'], 'langgraph_path': ('__pregel_pull', 'generate_report_plan'), 'langgraph_checkpoint_ns': 'generate_report_plan:95b586ca-bbef-4a3b-ceb2-a8e5b89fee3a'}, 'configurable': {'thread_id': 'af68348d-d5f6-417f-8a67-6a2ef135ae51', 'search_api': 'tavily', 'planner_provider': 'openai', 'max_search_depth': 1, 'planner_model': 'o3-mini', 'number_of_queries': 2, 'writer_model': 'claude-3-sonnet-20240229', '__pregel_resuming': False, '__pregel_task_id': '95b586ca-bbef-4a3b-ceb2-a8e5b89fee3a', '__pregel_send': functools.partial(<function local_write at 0x76fbe7c040e0>, <built-in method extend of collections.deque object at 0x76fbe6dcd3f0>, dict_keys(['__start__', 'generate_report_plan', 'build_section_with_web_research', 'gather_completed_sections'])), '__pregel_read': functools.partial(<function local_read at 0x76fbe7c04040>, 1, {'v': 1, 'ts': '2025-02-21T23:22:04.747821+00:00', 'id': '1eff0aaa-9501-623a-8000-95c4d9cff549', 'channel_values': {'topic': 'Foundational AI models of biology', 'number_of_main_sections': 5, 'start:generate_report_plan': '__start__'}, 'channel_versions': {'__start__': '00000000000000000000000000000002.0.7165279628205287', 'topic': '00000000000000000000000000000002.0.2885149106614494', 'number_of_main_sections': '00000000000000000000000000000002.0.11968414577225606', 'start:generate_report_plan': '00000000000000000000000000000002.0.2197007793839637'}, 'versions_seen': {'__input__': {}, '__start__': {'__start__': '00000000000000000000000000000001.0.9697721941149816'}}, 'pending_sends': []}, {'topic': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09240>, 'number_of_main_sections': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09280>, 'sections': <langgraph.channels.last_value.LastValue object at 0x76fbe6e092c0>, 'section': <langgraph.channels.binop.BinaryOperatorAggregate object at 0x76fbe6e09300>, 'search_iterations': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09440>, 'search_queries': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09400>, 'source_str': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09480>, 'completed_sections': <langgraph.channels.binop.BinaryOperatorAggregate object at 0x76fbe6e094c0>, 'report_sections_from_research': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09500>, '__start__': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6d70ac0>, 'generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e095c0>, 'build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09600>, 'gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09640>, 'branch:__start__:__self__:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09680>, 'branch:__start__:__self__:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e096c0>, 'branch:__start__:__self__:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09700>, 'branch:generate_report_plan:__self__:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09740>, 'branch:generate_report_plan:__self__:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09780>, 'branch:generate_report_plan:__self__:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e097c0>, 'branch:build_section_with_web_research:__self__:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09800>, 'branch:build_section_with_web_research:__self__:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09840>, 'branch:build_section_with_web_research:__self__:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09880>, 'branch:gather_completed_sections:__self__:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e098c0>, 'branch:gather_completed_sections:__self__:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09900>, 'branch:gather_completed_sections:__self__:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09940>, 'start:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09980>, 'branch:generate_report_plan:condition:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e099c0>, 'branch:generate_report_plan:condition:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09a00>, 'branch:generate_report_plan:condition:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09a40>}, {}, PregelTaskWrites(path=('__pregel_pull', 'generate_report_plan'), name='generate_report_plan', writes=deque([]), triggers=['start:generate_report_plan']), {'tags': [], 'metadata': ChainMap({'thread_id': 'af68348d-d5f6-417f-8a67-6a2ef135ae51', 'search_api': 'tavily', 'planner_provider': 'openai', 'max_search_depth': 1, 'planner_model': 'o3-mini', 'number_of_queries': 2, 'writer_model': 'claude-3-sonnet-20240229'}), 'callbacks': None, 'recursion_limit': 25, 'configurable': {'thread_id': 'af68348d-d5f6-417f-8a67-6a2ef135ae51', 'search_api': 'tavily', 'planner_provider': 'openai', 'max_search_depth': 1, 'planner_model': 'o3-mini', 'number_of_queries': 2, 'writer_model': 'claude-3-sonnet-20240229', '__pregel_resuming': False}}), '__pregel_store': None, '__pregel_checkpointer': <langgraph.checkpoint.memory.InMemorySaver object at 0x76fbe6e9ac10>, 'checkpoint_map': {'': '1eff0aaa-9501-623a-8000-95c4d9cff549'}, 'checkpoint_id': None, 'checkpoint_ns': 'generate_report_plan:95b586ca-bbef-4a3b-ceb2-a8e5b89fee3a', '__pregel_scratchpad': PregelScratchpad(call_counter=<method-wrapper '__next__' of itertools.count object at 0x76fbe6e0bd40>, interrupt_counter=<method-wrapper '__next__' of itertools.count object at 0x76fbe6e0bdc0>, resume=[], null_resume=None, _consume_null_resume=<function _scratchpad.<locals>.<lambda> at 0x76fbe6e07b00>, subgraph_counter=<method-wrapper '__next__' of itertools.count object at 0x76fbe6e0bd80>), '__pregel_previous': None}, 'callbacks': <langchain_core.callbacks.manager.AsyncCallbackManager object at 0x76fbe6e0be10>, 'run_name': 'generate_report_plan'}, triggers=['start:generate_report_plan'], retry_policy=None, cache_policy=None, id='95b586ca-bbef-4a3b-ceb2-a8e5b89fee3a', path=('__pregel_pull', 'generate_report_plan'), scheduled=False, writers=[ChannelWrite<...,generate_report_plan>(tags=['langsmith:hidden'], recurse=True, explode_args=False, func_accepts_config=True, func_accepts={}, writes=[ChannelWriteTupleEntry(mapper=<function CompiledStateGraph.attach_node.<locals>._get_updates at 0x76fbe6d89c60>, value=<object object at 0x76fbe7fec510>), ChannelWriteEntry(channel='generate_report_plan', value='generate_report_plan', skip_none=False, mapper=None)], require_at_least_one_of=None), _route(tags=None, recurse=True, explode_args=False, func_accepts_config=True, func_accepts={}, _is_channel_writer=True), _route(tags=None, recurse=True, explode_args=False, func_accepts_config=True, func_accepts={}, _is_channel_writer=True)], subgraphs=[])), '__pregel_read': functools.partial(<function local_read at 0x76fbe7c04040>, 1, {'v': 1, 'ts': '2025-02-21T23:22:04.747821+00:00', 'id': '1eff0aaa-9501-623a-8000-95c4d9cff549', 'channel_values': {'topic': 'Foundational AI models of biology', 'number_of_main_sections': 5, 'start:generate_report_plan': '__start__'}, 'channel_versions': {'__start__': '00000000000000000000000000000002.0.7165279628205287', 'topic': '00000000000000000000000000000002.0.2885149106614494', 'number_of_main_sections': '00000000000000000000000000000002.0.11968414577225606', 'start:generate_report_plan': '00000000000000000000000000000002.0.2197007793839637'}, 'versions_seen': {'__input__': {}, '__start__': {'__start__': '00000000000000000000000000000001.0.9697721941149816'}}, 'pending_sends': []}, {'topic': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09240>, 'number_of_main_sections': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09280>, 'sections': <langgraph.channels.last_value.LastValue object at 0x76fbe6e092c0>, 'section': <langgraph.channels.binop.BinaryOperatorAggregate object at 0x76fbe6e09300>, 'search_iterations': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09440>, 'search_queries': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09400>, 'source_str': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09480>, 'completed_sections': <langgraph.channels.binop.BinaryOperatorAggregate object at 0x76fbe6e094c0>, 'report_sections_from_research': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09500>, '__start__': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6d70ac0>, 'generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e095c0>, 'build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09600>, 'gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09640>, 'branch:__start__:__self__:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09680>, 'branch:__start__:__self__:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e096c0>, 'branch:__start__:__self__:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09700>, 'branch:generate_report_plan:__self__:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09740>, 'branch:generate_report_plan:__self__:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09780>, 'branch:generate_report_plan:__self__:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e097c0>, 'branch:build_section_with_web_research:__self__:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09800>, 'branch:build_section_with_web_research:__self__:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09840>, 'branch:build_section_with_web_research:__self__:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09880>, 'branch:gather_completed_sections:__self__:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e098c0>, 'branch:gather_completed_sections:__self__:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09900>, 'branch:gather_completed_sections:__self__:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09940>, 'start:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09980>, 'branch:generate_report_plan:condition:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e099c0>, 'branch:generate_report_plan:condition:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09a00>, 'branch:generate_report_plan:condition:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09a40>}, {}, PregelTaskWrites(path=('__pregel_pull', 'generate_report_plan'), name='generate_report_plan', writes=deque([]), triggers=['start:generate_report_plan']), {'tags': [], 'metadata': ChainMap({'thread_id': 'af68348d-d5f6-417f-8a67-6a2ef135ae51', 'search_api': 'tavily', 'planner_provider': 'openai', 'max_search_depth': 1, 'planner_model': 'o3-mini', 'number_of_queries': 2, 'writer_model': 'claude-3-sonnet-20240229'}), 'callbacks': None, 'recursion_limit': 25, 'configurable': {'thread_id': 'af68348d-d5f6-417f-8a67-6a2ef135ae51', 'search_api': 'tavily', 'planner_provider': 'openai', 'max_search_depth': 1, 'planner_model': 'o3-mini', 'number_of_queries': 2, 'writer_model': 'claude-3-sonnet-20240229', '__pregel_resuming': False}}), '__pregel_store': None, '__pregel_checkpointer': <langgraph.checkpoint.memory.InMemorySaver object at 0x76fbe6e9ac10>, 'checkpoint_map': {'': '1eff0aaa-9501-623a-8000-95c4d9cff549'}, 'checkpoint_id': None, 'checkpoint_ns': 'generate_report_plan:95b586ca-bbef-4a3b-ceb2-a8e5b89fee3a', '__pregel_scratchpad': PregelScratchpad(call_counter=<method-wrapper '__next__' of itertools.count object at 0x76fbe6e0bd40>, interrupt_counter=<method-wrapper '__next__' of itertools.count object at 0x76fbe6e0bdc0>, resume=[], null_resume=None, _consume_null_resume=<function _scratchpad.<locals>.<lambda> at 0x76fbe6e07b00>, subgraph_counter=<method-wrapper '__next__' of itertools.count object at 0x76fbe6e0bd80>), '__pregel_previous': None, '__pregel_call': functools.partial(<function PregelRunner.atick.<locals>.call at 0x76fbe6e07ba0>, PregelExecutableTask(name='generate_report_plan', input={'topic': 'Foundational AI models of biology', 'number_of_main_sections': 5, 'completed_sections': []}, proc=<langgraph.utils.runnable.RunnableSeq object at 0x76fbe6ea1290>, writes=deque([]), config={'metadata': {'thread_id': 'af68348d-d5f6-417f-8a67-6a2ef135ae51', 'search_api': 'tavily', 'planner_provider': 'openai', 'max_search_depth': 1, 'planner_model': 'o3-mini', 'number_of_queries': 2, 'writer_model': 'claude-3-sonnet-20240229', 'langgraph_step': 1, 'langgraph_node': 'generate_report_plan', 'langgraph_triggers': ['start:generate_report_plan'], 'langgraph_path': ('__pregel_pull', 'generate_report_plan'), 'langgraph_checkpoint_ns': 'generate_report_plan:95b586ca-bbef-4a3b-ceb2-a8e5b89fee3a'}, 'configurable': {'thread_id': 'af68348d-d5f6-417f-8a67-6a2ef135ae51', 'search_api': 'tavily', 'planner_provider': 'openai', 'max_search_depth': 1, 'planner_model': 'o3-mini', 'number_of_queries': 2, 'writer_model': 'claude-3-sonnet-20240229', '__pregel_resuming': False, '__pregel_task_id': '95b586ca-bbef-4a3b-ceb2-a8e5b89fee3a', '__pregel_send': functools.partial(<function local_write at 0x76fbe7c040e0>, <built-in method extend of collections.deque object at 0x76fbe6dcd3f0>, dict_keys(['__start__', 'generate_report_plan', 'build_section_with_web_research', 'gather_completed_sections'])), '__pregel_read': functools.partial(<function local_read at 0x76fbe7c04040>, 1, {'v': 1, 'ts': '2025-02-21T23:22:04.747821+00:00', 'id': '1eff0aaa-9501-623a-8000-95c4d9cff549', 'channel_values': {'topic': 'Foundational AI models of biology', 'number_of_main_sections': 5, 'start:generate_report_plan': '__start__'}, 'channel_versions': {'__start__': '00000000000000000000000000000002.0.7165279628205287', 'topic': '00000000000000000000000000000002.0.2885149106614494', 'number_of_main_sections': '00000000000000000000000000000002.0.11968414577225606', 'start:generate_report_plan': '00000000000000000000000000000002.0.2197007793839637'}, 'versions_seen': {'__input__': {}, '__start__': {'__start__': '00000000000000000000000000000001.0.9697721941149816'}}, 'pending_sends': []}, {'topic': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09240>, 'number_of_main_sections': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09280>, 'sections': <langgraph.channels.last_value.LastValue object at 0x76fbe6e092c0>, 'section': <langgraph.channels.binop.BinaryOperatorAggregate object at 0x76fbe6e09300>, 'search_iterations': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09440>, 'search_queries': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09400>, 'source_str': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09480>, 'completed_sections': <langgraph.channels.binop.BinaryOperatorAggregate object at 0x76fbe6e094c0>, 'report_sections_from_research': <langgraph.channels.last_value.LastValue object at 0x76fbe6e09500>, '__start__': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6d70ac0>, 'generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e095c0>, 'build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09600>, 'gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09640>, 'branch:__start__:__self__:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09680>, 'branch:__start__:__self__:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e096c0>, 'branch:__start__:__self__:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09700>, 'branch:generate_report_plan:__self__:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09740>, 'branch:generate_report_plan:__self__:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09780>, 'branch:generate_report_plan:__self__:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e097c0>, 'branch:build_section_with_web_research:__self__:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09800>, 'branch:build_section_with_web_research:__self__:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09840>, 'branch:build_section_with_web_research:__self__:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09880>, 'branch:gather_completed_sections:__self__:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e098c0>, 'branch:gather_completed_sections:__self__:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09900>, 'branch:gather_completed_sections:__self__:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09940>, 'start:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09980>, 'branch:generate_report_plan:condition:generate_report_plan': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e099c0>, 'branch:generate_report_plan:condition:build_section_with_web_research': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09a00>, 'branch:generate_report_plan:condition:gather_completed_sections': <langgraph.channels.ephemeral_value.EphemeralValue object at 0x76fbe6e09a40>}, {}, PregelTaskWrites(path=('__pregel_pull', 'generate_report_plan'), name='generate_report_plan', writes=deque([]), triggers=['start:generate_report_plan']), {'tags': [], 'metadata': ChainMap({'thread_id': 'af68348d-d5f6-417f-8a67-6a2ef135ae51', 'search_api': 'tavily', 'planner_provider': 'openai', 'max_search_depth': 1, 'planner_model': 'o3-mini', 'number_of_queries': 2, 'writer_model': 'claude-3-sonnet-20240229'}), 'callbacks': None, 'recursion_limit': 25, 'configurable': {'thread_id': 'af68348d-d5f6-417f-8a67-6a2ef135ae51', 'search_api': 'tavily', 'planner_provider': 'openai', 'max_search_depth': 1, 'planner_model': 'o3-mini', 'number_of_queries': 2, 'writer_model': 'claude-3-sonnet-20240229', '__pregel_resuming': False}}), '__pregel_store': None, '__pregel_checkpointer': <langgraph.checkpoint.memory.InMemorySaver object at 0x76fbe6e9ac10>, 'checkpoint_map': {'': '1eff0aaa-9501-623a-8000-95c4d9cff549'}, 'checkpoint_id': None, 'checkpoint_ns': 'generate_report_plan:95b586ca-bbef-4a3b-ceb2-a8e5b89fee3a', '__pregel_scratchpad': PregelScratchpad(call_counter=<method-wrapper '__next__' of itertools.count object at 0x76fbe6e0bd40>, interrupt_counter=<method-wrapper '__next__' of itertools.count object at 0x76fbe6e0bdc0>, resume=[], null_resume=None, _consume_null_resume=<function _scratchpad.<locals>.<lambda> at 0x76fbe6e07b00>, subgraph_counter=<method-wrapper '__next__' of itertools.count object at 0x76fbe6e0bd80>), '__pregel_previous': None}, 'callbacks': <langchain_core.callbacks.manager.AsyncCallbackManager object at 0x76fbe6e0be10>, 'run_name': 'generate_report_plan'}, triggers=['start:generate_report_plan'], retry_policy=None, cache_policy=None, id='95b586ca-bbef-4a3b-ceb2-a8e5b89fee3a', path=('__pregel_pull', 'generate_report_plan'), scheduled=False, writers=[ChannelWrite<...,generate_report_plan>(tags=['langsmith:hidden'], recurse=True, explode_args=False, func_accepts_config=True, func_accepts={}, writes=[ChannelWriteTupleEntry(mapper=<function CompiledStateGraph.attach_node.<locals>._get_updates at 0x76fbe6d89c60>, value=<object object at 0x76fbe7fec510>), ChannelWriteEntry(channel='generate_report_plan', value='generate_report_plan', skip_none=False, mapper=None)], require_at_least_one_of=None), _route(tags=None, recurse=True, explode_args=False, func_accepts_config=True, func_accepts={}, _is_channel_writer=True), _route(tags=None, recurse=True, explode_args=False, func_accepts_config=True, func_accepts={}, _is_channel_writer=True)], subgraphs=[]))}, 'callbacks': <langchain_core.callbacks.manager.AsyncCallbackManager object at 0x76fbe6e10150>}
2025-02-21 18:22:04,749 [INFO] Topic: Foundational AI models of biology
2025-02-21 18:22:04,749 [INFO] Number of sections: 5
2025-02-21 18:22:04,749 [INFO] Configuration: Configuration(report_structure='Each section of the learning roadmap should:\n1. Focus on a specific sub-topic of the main topic\n2. Include exactly 6 subsections that break down the topic logically\n3. Each subsection must have:\n   - A clear title\n   - A brief description\n   - Detailed content\n   - Relevant sources', number_of_queries=2, max_search_depth=1, planner_provider='openai', planner_model='o3-mini', writer_provider=<WriterProvider.OPENAI: 'openai'>, writer_model='claude-3-sonnet-20240229', search_api='tavily')
2025-02-21 18:22:04,749 [INFO] Query generation instructions: You are an expert technical writer, helping to plan a learning roadmap. 

<Report topic>
Foundational AI models of biology
</Report topic>

<Report organization>
Each section of the learning roadmap should:
1. Focus on a specific sub-topic of the main topic
2. Include exactly 6 subsections that break down the topic logically
3. Each subsection must have:
   - A clear title
   - A brief description
   - Detailed content
   - Relevant sources
</Report organization>

<Task>
Your goal is to generate 2 search queries that will help gather comprehensive information for planning the learning roadmap sections. 

The queries should:

1. Be related to the topic of the learning roadmap
2. Help satisfy the requirements specified in the learning roadmap organization

Make the queries specific enough to find high-quality, relevant sources while covering the breadth needed for the learning roadmap structure.
</Task>
2025-02-21 18:22:15,207 [INFO] Query generation response: Below are two specific search queries designed to gather in-depth, structured information that will help form the six-subsection learning roadmap for "Foundational AI Models of Biology":

1. "Comprehensive review of foundational AI models in biology: architectures, training strategies, data integration, evaluation metrics, application case studies, and future research trends"  
 • This query will return detailed surveys and reviews that break down AI models in biology into distinct components. It seeks scholarly articles and research reports that cover the overall structure—from the underlying architectures and methodologies to real-world case studies and the challenges facing future developments. These segments align well with the six-subsection structure required for the roadmap.  
 • Relevant sources might include papers from journals like Nature Biotechnology, IEEE Transactions on Neural Networks, and resources from specialized conferences such as ISMB.

2. "Structured framework for learning foundational AI models in biology: subtopic taxonomy including biological context, algorithmic approaches, model interpretation, integration with omics data, experimental validation, and emerging trends"  
 • This query is aimed at retrieving resources that already propose or use a systematic breakdown of topics. The inclusion of keywords like “subtopic taxonomy” and detailed aspects (e.g., biological context and experimental validation) ensures that the result set includes comprehensive teaching outlines or learning paths, which is ideal for planning your roadmap sections with clear titles, descriptions, and detailed content.  
 • Sources may include systematic reviews, educational resources from universities, and white papers from research institutes such as the Allen Institute for AI or similar bodies.

These queries target high-quality, in-depth materials that can be dissected into six logically-organized subsections, each with a title, description, detailed content, and relevant sources, perfectly matching the requirements for your roadmap.
2025-02-21 18:22:15,207 [INFO] Parsed queries: ['Below are two specific search queries designed to gather in-depth, structured information that will help form the six-subsection learning roadmap for "Foundational AI Models of Biology":', '• This query will return detailed surveys and reviews that break down AI models in biology into distinct components. It seeks scholarly articles and research reports that cover the overall structure—from the underlying architectures and methodologies to real-world case studies and the challenges facing future developments. These segments align well with the six-subsection structure required for the roadmap.', '• Relevant sources might include papers from journals like Nature Biotechnology, IEEE Transactions on Neural Networks, and resources from specialized conferences such as ISMB.', '• This query is aimed at retrieving resources that already propose or use a systematic breakdown of topics. The inclusion of keywords like “subtopic taxonomy” and detailed aspects (e.g., biological context and experimental validation) ensures that the result set includes comprehensive teaching outlines or learning paths, which is ideal for planning your roadmap sections with clear titles, descriptions, and detailed content.', '• Sources may include systematic reviews, educational resources from universities, and white papers from research institutes such as the Allen Institute for AI or similar bodies.', 'These queries target high-quality, in-depth materials that can be dissected into six logically-organized subsections, each with a title, description, detailed content, and relevant sources, perfectly matching the requirements for your roadmap.']
2025-02-21 18:22:15,207 [INFO] Using search API: tavily
